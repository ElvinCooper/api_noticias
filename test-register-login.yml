version: "1.0"

name: Test Registro y Login

spec: ./schemas.yml

config:
  http: 
    timeout: 1000    

         # cambiar 127.0.0.1 para para github actions
  variables:
    url_base: http://127.0.0.1:5000
    username: testuser
    email: elvincooper@gmail.com
    password: securepassword
    telefono: 123456789012
tests:
  register_and_login:
    name: Crear usuario y hacer login
    steps:
      - name: Registrar nuevo usuario
        http:
          url: http://127.0.0.1:5000/usuarios
          method: POST
          headers:
            Content-Type: application/json
            X-API-KEY: ${{env.FRONTEND_API_KEY}}            
          json:
            email: "{{ variables.email }}"  
            password: "{{ variables.password }}"       
            nombre:  "{{ variables.username }}"
            telefono: "{{ variables.telefono }}"          
          responses:
            status_code: 201 
            json:
              id_usuario: $user_id  # para guardar el id del usuario creado un la variable user_id
          extract:
            email: $.email  
      - name: Login de usuarios
        http:
          url: http://127.0.0.1:5000/login
          method: POST
          headers:
            Content-Type: application/json
            X-API-KEY: ${{env.FRONTEND_API_KEY}}            
          json:
            email: "{{ email }}"
            password: "{{ password }}"
          responses:
            status_code: 200
          captures:
            access_token:
              jsonpath: $.access_token  
            user_id:
              jsonpath: $.user.id_usuario
      - name: Actualizar datos de un usuario
        http:
          url: http://127.0.0.1:5000/usuarios/{{ user_id }}
          method: PUT
          headers:
             Content-Type: application/json
             Authorization: Bearer ${{captures.access_token}}            
          json:
            nombre: "{{ username }}"       
            telefono: "{{ telefono }}"
            email: "{{ email }}"          
          responses:
            status_code: 200      
      - name: Consultar todos los usuarios
        http:
          url: http://127.0.0.1:5000/usuarios
          method: GET
          headers:
            Authorization: Bearer ${{captures.access_token}}
          responses:
            status_code: 200    

            #--------------------------------  Tests para los Endpoints de Posts -----------------------------#  
  post:
    name: Operaciones con Post
    steps:
      - name: Consultar todos los Posts
        http:
          url: http://127.0.0.1:5000/posts
          method: GET
          params:
            page: 1
            per_page: 10
          responses:
            status_code: 200
            schema:
              type: object
              properties:
                total:
                  type: integer
                page:
                  type: integer
                per_page:
                  type: integer
                items:
                  type: array
                  items:
                    type: object          
      - name: Crear post
        http:
          url: http://127.0.0.1:5000/posts
          method: POST
          headers:
            Content-Type: application/json
            Authorization: Bearer ${{captures.access_token}}            
          json:
            titulo: "Mi primer post de prueba"
            contenido: "Este es el contenido de mi post de prueba"
            id_usuario: "{{ user_id }}"
            id_pais: "US"
            visible: true
            status: true
            categoria_ids: []
          responses:
            status_code: 201
            json:
              id_post: $post_id
      - name: Actualizar un Post existente
        http:
          url: http://127.0.0.1:5000/posts/{{ id_post }}
          method: PUT
          headers:
            Content-Type: application/json
            accept: application/json
          json:
            contenido: reprehenderit Excepteur aliqua
            id_post: mollit ullamco esse ut magna
          responses:
            status_code: 200
            schema:              
      - name: Eliminar un Post existente
        http:
          url: http://127.0.0.1:5000/posts/{{ id_post }}
          method: DELETE
          headers:
            Content-Type: application/json
            accept: application/json
          json:
            anim_eb4: in consequat
            add9: 15455427.024198532
            incididunt_ab0: -52233274
            officia6: nisi
            titulo: Duis dolor Lorem
            id_pais: nostrud tempor occaecat fugiat
            id_post: ut nostrud
            fecha_publicacion: "1946-10-24T03:21:15.0Z"
            status: true
          responses:
            status_code: 200                  

 #--------------------------------  Tests para los Endpoints de Favoritos  -----------------------------#  

  favoritos:
      name: Operaciones con Favoritos
      steps:
        - name: Crear un nuevo favorito
          http:
            url: http://127.0.0.1:5000/favoritos
            method: POST
            headers:
              Content-Type: application/json
              accept: application/json
            json:
              id_usuario: "{{ user_id }}"
              id_post: "{{ post_id }}"
              responses:
          status_code: 201
          captures:
            id_usuario:
              jsonpath: $.id_usuario
            id_post:
              jsonpath: $.id_post  
        - name: Consultar un Post favorito por su ID
          http:
            url: http://127.0.0.1:5000/favoritos/{{ captures.id_usuario }}
            method: GET
            headers:
              Content-Type: application/json
              accept: application/json
          responses:
            status_code: 200                           
        - name: Eliminar un post como favorito
          http:
            url: http://127.0.0.1:5000/favorito/eliminar/{{ captures.id_post }}
            method: DELETE
            headers:
              Content-Type: application/json
              Authorization: Bearer ${{ captures.access_token }}                        
            responses:
              status: 201    

#--------------------------------  Tests para los Endpoints de Favoritos  -----------------------------#                
  categorias:
      name: Operaciones con Categorias
      steps:
        - name: Registrar una nueva Categoria
          http:
            url: http://127.0.0.1:5000/categoria
            method: POST
            headers:
              Content-Type: application/json
              Authorization: Bearer ${{ captures.access_token }}
            json:
              descripcion: quis
              total_publicaciones: 19658522
            responses:
              status: 201
              captures:
              id_categoria:
                jsonpath: $.id_categoria  
        - name: Consultar una categoria por su ID
          http:
            url: http://127.0.0.1:5000/{{ captures.id_categoria }}
            method: GET
            responses:
              status: 200

#--------------------------------  Operaciones con Paises -----------------------------#    
  pais:
    name: Operaciones con Paises
    steps:
      - name: Registrar un nuevo Pais
        http:
          url: http://127.0.0.1:5000/paises
          method: POST
          headers:
            Content-Type: application/json
            Authorization: Bearer ${{ captures.access_token }}
          json:
            nombre_pais: ex dolore laborum fugiat ea
            abrebiatura_pais: rep
          responses:
            status: 201      
            captures:
              id_pais:
                jsonpath: $.id_pais
      
      - name: Consultar todos los paises
        http:
          url: http://127.0.0.1:5000/paises
          method: GET
          responses:
            status: 200            

  multimedia:
    name: Crear y consultar un recurso multimedia
    steps:
      - name: Crear multimedia
        http:
          url: http://127.0.0.1:5000/api/v1/multimedia
          method: POST
          headers:
            Content-Type: application/json
            Authorization: Bearer ${{ captures.access_token }}
          json:
            nombre_archivo: "video_test_001.mp4"
            url_multimedia_alt: "https://cdn.test.com/video_test_001.mp4"
            tipo_archivo: "video"
          responses:
            status_code: 201
          captures:
            id_multimedia:
              jsonpath: $.id_multimedia
          set:
            id_multimedia: "{{ captures.id_multimedia }}"

      - name: Consultar multimedia por ID
        http:
          url: http://127.0.0.1:5000/api/v1/multimedia/{{ id_multimedia }}
          method: GET
          headers:
            Authorization: Bearer ${{ captures.access_token }}
            Content-Type: application/json
          responses:
            status_code: 200
            json:
              nombre_archivo: "video_test_001.mp4"
              tipo_archivo: "video"

        